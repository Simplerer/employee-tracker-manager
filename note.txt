insert into ..... set id= -, name= -, role= -, etc;


delete from ..... WHERE id= -;

update ..... set name = - WHERE id = -;
     -with no where, updates all rows



switch(type) {
     case 'sasfasfas': {
          what happens
          break
     }
     case 'sasfasfas': {
          what happens
          break
     }
     case 'sasfasfas': {
          what happens
          break
     }
    
}

prompt options
-view all departments    -
-view all roles          -
-view all employees      -
-add a department        -
-add a role              -
-add an employee   f l name, role, manager
-update employee role update role


bonus prompts
-update employee manager
-view employess by manager
-view employess by department
- delete departments, roles, and employees
-view combined salaries of all employees in department (view total utilized budget)


job titles, department, and salary should come from role_id

manager should come from manager_id

to compile all the relative data, a premade class may be halpful
employee class


const obj = { foo: "bar", baz: 42 };
console.log(Object.entries(obj)); // [ ['foo', 'bar'], ['baz', 42] ]
{ id: 1, name: 'Merryment' },
  { id: 2, name: 'Musical Enjoyment' },
  { id: 3, name: 'Gifts Central' },
  { id: 4, name: 'Feasts' },
  { id: 5, name: 'testcase' }
]